[build-system]
build-backend = "flit_core.buildapi"
requires = [
    "flit_core >=3.4,<4",
    "importlib_metadata>=0.7; python_version < '3.8'",
]


[project]
name = "chame"
description = "Chromatin accessibility module"
authors = [
    {name = "Danila Bredikhin"},
    {name = "Max Frank"},
]
maintainers = [
    {name = "Danila Bredikhin", email = "danila.bredikhin@embl.de"},
]
urls.Documentation = "https://gtca.github.io/chame"
urls.Source = "https://github.com/gtca/chame"
urls.Home-page = "https://github.com/gtca/chame"
requires-python = ">=3.8"
license = {file = "LICENSE"}
readme = "README.md"
dynamic = ["version"]
dependencies = [
    "anndata",
    "mudata",
    "scanpy",
    "pybedtools",
    "pysam",
]

[project.optional-dependencies]
dev = [
    # dev version generation
]
doc = [
    "sphinx",
    "myst-parser",
    "sphinx-book-theme",
    "readthedocs-sphinx-search",
    "nbsphinx",
    "sphinx-automodapi",
    "sphinxcontrib-bibtex",
    "sphinx-autodoc-typehints",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.coverage.run]
source = ["chame"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    '-Werror',  # if 3rd party libs raise DeprecationWarnings, just use filterwarnings below
    '--import-mode=importlib',  # allow using test files with same name
]
filterwarnings = [
    # 'ignore:.*U.*mode is deprecated:DeprecationWarning',
]

[tool.isort]
multi_line_output = 3
profile = "black"
skip = []

[tool.jupytext]
formats = "ipynb,md"

